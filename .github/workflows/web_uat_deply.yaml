name: Flutter Web Build and Docker Push

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.3'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build Flutter web
        run: flutter build web --release

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Oracle Cloud Container Registry
        run: |
          echo ${{ secrets.ORACLE_CLOUD_PRIVATE_KEY }} | base64 --decode > private_key.pem
          docker login -u ${{ secrets.ORACLE_CLOUD_USER_OCID }} --password-stdin ${{ secrets.ORACLE_CLOUD_REGION }}.ocir.io < private_key.pem

      - name: Build and push Docker image to Oracle Cloud Container Registry
        run: |
            docker buildx create --use
            docker buildx inspect default --bootstrap
            
            # Build and tag the Docker image
            docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.ORACLE_CLOUD_REGION }}.ocir.io/${{ secrets.ORACLE_CLOUD_TENANCY_OCID }}/${{ secrets.YOUR_CONTAINER_REGISTRY_REPOSITORY }}:latest .
            
            # Push the Docker image
            docker push ${{ secrets.ORACLE_CLOUD_REGION }}.ocir.io/${{ secrets.ORACLE_CLOUD_TENANCY_OCID }}/${{ secrets.YOUR_CONTAINER_REGISTRY_REPOSITORY }}:latest









##For pushing to docker hub
      # - name: Login to Docker Hub
      #   run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # - name: Build Docker image
      #   run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest .

      # - name: Push Docker image
      #   run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest

      # - name: Push Container to oracle cloud 
